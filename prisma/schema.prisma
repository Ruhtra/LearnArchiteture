generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String    @id @unique
  email          String    @unique @db.VarChar(255) // Nome Ãºnico global para email
  passwordHash   String    @db.VarChar(255)
  name           String    @db.VarChar(255)
  birthDate      DateTime? @db.Date
  profilePicture String?
  createdAt      DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @db.Timestamptz(6)
  Address        Address?
  Document       Document?
  phones         Phone[]

  @@map("users")
}

model Address {
  id         String   @id @unique
  userId     String   @unique
  street     String   @db.VarChar(255)
  number     String   @db.VarChar(10)
  postalCode String   @db.VarChar(20)
  city       String   @db.VarChar(100)
  country    String   @db.VarChar(100)
  createdAt  DateTime @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime @updatedAt @db.Timestamptz(6)
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addresses")
}

model Phone {
  id        String   @id @unique
  number    String   @db.VarChar(20)
  isPrimary Boolean  @default(false)
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  @@unique([number])
  @@map("phones")
}

model Document {
  id        String   @id @unique
  rg        String   @db.VarChar(20)
  cpf       String   @db.VarChar(20)
  otherInfo String?  @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique

  @@unique([rg, cpf])
  @@map("documents")
}
